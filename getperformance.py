import sys
import os
import json 
import matplotlib.pyplot as plt 
import numpy as np
import statistics

WARNING = '\033[31m'
MASSAGE = '\033[32m'
text = '\033[37m'
block_count = []

containers_list = os.popen('docker ps -aq').read()
containers_list = containers_list.splitlines()
num_container = len(containers_list)
#print(MASSAGE+'Preparing to generate performance report......')
#count number of blocks generated by each miner:
#print(MASSAGE+'Counting generated blocks......')
print('Generated blocks by each miner:\n')

for x in xrange(0,num_container):
	 nwallet_info = os.popen('docker ' + 'exec ' + '-it ' + containers_list[x] + ' bitcoin-cli getwalletinfo ').read()
	 nwallet_info = json.loads(nwallet_info)
	 txcount = nwallet_info["txcount"]
	 block_count.append(txcount)
	 print('Miner(%s):%s\n'%(containers_list[x],block_count[x]))

x_miners = list(range(1, num_container+1))
#get related mining info:
print('Collecting related mining information......')
nmininginfo_info = os.popen('docker ' + 'exec ' + '-it ' + containers_list[0] + ' bitcoin-cli getmininginfo ').read()
nmininginfo_info = json.loads(nmininginfo_info)
networkhashps = nmininginfo_info["networkhashps"]
difficulty = nmininginfo_info["difficulty"]
print('Preparing plots......')
#plot conf:
plt.figure(figsize=(20, 15)) 
plt.bar(containers_list,block_count,tick_label = containers_list,width = 0.8, color = ['green']) 
plt.yticks(np.arange(0,max(block_count)+10,10))
plt.xlabel('Miner') 
plt.ylabel('Number of Blocks (blk)') 
plt.title('Testnet Miners Perofmance')
#display the report:
print('Network hash per second:%s\nCurrent difficulty:%s'%(networkhashps,difficulty))
print('Avarage number of blocks generated by a miner:%d'%(statistics.mean(block_count)))
print('Max number of blocks generated by a miner:%d'%(max(block_count)))
print('Min number of blocks generated by a miner:%d'%(min(block_count)))
#plt.show()
plt.savefig('plot.png')
plt.close()



 

